---- WEB / REST------ spring-boot-starter-web (SpringMVC,jackson,Actuator,Tomcat,etc)
https://chat.openai.com/c/831f36a0-bce4-4372-87d4-9ab6528babc5

1 Error handling in web.
https://chatgpt.com/c/7d23b0fe-a7a5-43d5-9ced-69d4a344e31a
-  /error + BasicErrorController (already) + create custom one with ErrorAttribute.
-  WebServerFactoryCustomizer *
- Add @ExceptionHandler m() in individual controllers.
- Global Exception Handling with @ControllerAdvice/@RestControllerAdvice + @ExceptionHandler(Exception.class)
- ErrorAttribute

2. Register a New Servlet : @Bean ServletRegistrationBean<MyServlet>

3. Change from Tomcat to jetty/undertow servers.
   - Add/remove Dependencies
   - Add @Bean to modify ServletContainer(port,etc) - UndertowEmbeddedServletContainerFactory, JettyEmbeddedServletContainerFactory.

4. Remove embedded Server / Deploy on external Server
https://chatgpt.com/c/f4a0c9cd-c6cb-414e-888c-605c2d50340c
 - remove dependencies.
 - <packaging>war</packaging>
 - extend SpringBootServletInitializer -> override Configure.
    protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
         return application.sources(DemoApplication.class);
    }

5. Validation in SB - on DTO/Bean/ENTITY
https://chatgpt.com/c/a04dc001-e879-43e0-a39d-acd01b9ef2c7
- Add <artifactId>spring-boot-starter-validation</artifactId>
- @email, @size, @NotBlank(""), @CustomAnnotationAsWell, etc
- use @Valid annotation to trigger validation in Controller or where ever binding happens.
- optional : inject BindingResult.
- Custom validator : check com.lekhraj.java.spring.SB_99_RESTful_API.validator;

6. REST Documentation (Not Working *)
- springfox-boot-starter + @EnableSwagger2WebMvc + com.lekhraj.java.spring.SB_99_RESTful_API.configuration.SwaggerDocConfig - @Bean Docket
- Springdoc OpenAPI+ @EnableSwagger2 + com.lekhraj.java.spring.SB_99_RESTful_API.configuration.SpringDocOpenApiCopnfig - @Bean Docket


---- WEB / REST------  "Customization" Example----

1. Whitelabel-ErrorPage
    * @EnableAutoConfiguration(exclude = {ErrorMvcAutoConfiguration.class}) --> show Tomcat page then.
    * server.error.whitelabel.enabled=false --> show Tomcat page then.
    * @Controller MyErrorController class >> @RequestMapping("/error")m(){ my page code} --> custom my page.

2. ObjectMapper
    @Configuration JacksonConfig >> @Bean ObjectMapper
       - setSerializationInclusion(JsonInclude.Include.NON_NULL)
       - Serialize LocalDateTime in custom Serializer.
         com.lekhraj.java.spring.SB_99_RESTful_API."Serializer".LocalDateTimeSerializer







